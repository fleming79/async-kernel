name: New release
# Use this workflow to create a PR with updated release notes and labelled accordingly
# A new release is created when it is mereged back in.
# The tag should be manually deleted if the PR is cancelled.
run-name: ${{ github.actor }} initiated a new release ${{ github.event.inputs.release_version }}  ðŸš€
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Version"
        default: "v0.1.0-rc0"

jobs:
  changelog:
    name: New release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: main

      - name: Version
        id: branch
        run: echo release-${{ github.event.inputs.release_version}}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Create a new branch with an updated changelog
        timeout-minutes: 5
        run: |
          git checkout -b ${{steps.branch}}
          uvx git-cliff -o CHANGELOG.md --github-repo ${{ github.repository }} --github-token ${{ secrets.GITHUB_TOKEN }} --tag ${{ github.event.inputs.release_version}}
          git config user.name ${{github.triggering_actor}}
          git config user.email ''
          git add CHANGELOG.md
          git commit -m "Release ${{ github.event.inputs.release_version}}"
          uvx git-cliff -o release_info.md --github-repo ${{ github.repository }} --github-token ${{ secrets.GITHUB_TOKEN }} --tag ${{ github.event.inputs.release_version}} --current
          git tag ${{ github.event.inputs.release_version}} -m "Release ${{ github.event.inputs.release_version}}"
          git push  https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git -f
          git push  https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git --tags

      - name: Create pull request
        # ref: https://cli.github.com/manual/gh_pr_create
        continue-on-error: true
        run: |
          echo "## New pull request" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          gh pr create --head ${{steps.branch}} --title '${{github.event.inputs.release_version}}' --label release  --body-file release_info.md --assignee ${{github.actor}} >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo  cat release_info.md >> $GITHUB_STEP_SUMMARY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
