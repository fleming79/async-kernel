name: New release
# Use this workflow to create a PR with updated release notes and labelled accordingly
# A new release is created when it is mereged back in.
# The tag should be manually deleted if the PR is cancelled.
run-name: ${{ github.actor }} initiated a new release ${{ github.event.inputs.release_version }}  ðŸš€
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Version"
        default: "v0.1.0-rc0"
      publish:
        description: "Publish"
        type: boolean
        default: true

jobs:
  changelog:
    name: Write changelog and merge into main
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: main

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Create a new branch with an updated changelog
        timeout-minutes: 5
        run: |
          git checkout -b release-${{ github.event.inputs.release_version}}
          git tag ${{ github.event.inputs.release_version}}
          uvx git-cliff -o CHANGELOG.md --github-repo ${{ github.repository }} --github-token ${{ secrets.GITHUB_TOKEN }}
          git config user.name ${{github.triggering_actor}}
          git config user.email ''
          git add CHANGELOG.md
          git commit -m "Release ${{ github.event.inputs.release_version}}"
          git push  https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Create pull request
        # ref: https://cli.github.com/manual/gh_pr_create
        id: create_pull_request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr create --head release-${{ github.event.inputs.release_version}} --title '${{github.event.inputs.release_version}}' --body 'Changelog for new release'  --label release
      - name: Merge pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr merge --squash

  publish:
    needs: changelog
    if: ${{ github.event.inputs.publish}}
    secrets: inherit
    permissions:
      contents: write
      id-token: write
    uses: ./.github/workflows/publish-to-pypi.yml
